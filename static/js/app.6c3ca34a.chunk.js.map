{"version":3,"sources":["assets/icon.png","src/components/NavBar.tsx","src/components/Footer.tsx","src/components/JsonldUploader.tsx","src/components/RenderObjectForm.tsx","src/pages/JsonldWizard.tsx","src/pages/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/fair-metadata-wizard/fair-metadata-wizard/App.css?fa54","App.css"],"names":["module","exports","useStyles","makeStyles","theme","solidButton","backgroundColor","palette","primary","main","color","borderRadius","padding","dark","cursor","menuButton","common","white","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","AuthButton","login","logout","popup","Button","target","href","darkLink","light","whiteLink","footer","spacing","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","link","secondary","input","background","fontSize","fontFamily","settingsForm","marginBottom","saveButton","margin","fullWidth","JsonldUploader","renderObject","onChange","useTheme","React","useState","show_info_card","json_error_open","json_loaded_open","upload_jsonld","JSON","stringify","state","setState","stateRef","useRef","updateState","useCallback","update","current","Card","CardHeader","action","IconButton","onClick","name","aria-expanded","aria-label","subheader","Collapse","in","timeout","unmountOnExit","CardContent","rel","onSubmit","event","preventDefault","parse","e","console","log","FormControl","TextField","id","label","placeholder","value","required","multiline","size","InputProps","InputLabelProps","type","startIcon","Snackbar","open","onClose","autoHideDuration","elevation","severity","addEntryButton","marginLeft","autocomplete","formInput","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","renameKey","object","old_key","new_key","Object","defineProperty","getOwnPropertyDescriptor","RenderObjectForm","props","ontologyObject","fullJsonld","autocompleteOntologyOptions","handleChange","handleAddEntry","property","push","length","handleAddProperty","getConceptSearchDescription","concept","search_description","handleAutocompleteOntologyOptions","inputText","innerText","conceptsArray","ontologyGraph","Array","isArray","filter","toLowerCase","indexOf","keys","map","graphLabel","concat","sort","a","b","key","startsWith","Grid","container","item","xs","subSelections","handleRemoveProperty","disabled","md","Autocomplete","defaultValue","options","onInputChange","onSelect","newInputValue","getOptionSelected","option","selectedValue","getOptionLabel","groupBy","renderInput","params","newProperty","Chip","handleRecursiveChange","$rdf","require","JsonldWizard","location","useLocation","dialogOpen","wizard_jsonld","jsonld_uri_provided","ontology_jsonld","ontoload_error_open","ontoload_success_open","useEffect","URLSearchParams","search","hash","get","axios","then","res","data","downloadOntology","contextUrl","replace","defaults","headers","toJSONLD","jsonld_rdf","catch","error","uri","rdf_format","endsWith","Promise","resolve","reject","store","graph","doc","sym","serialize","err","jsonldData","LoggedIn","Value","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","normalFont","About","project_license","language_autocomplete","createMuiTheme","blue","typography","App","basename","View","exact","path","component","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","i","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.6c3ca34a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Button, Tooltip } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { AuthButton } from '@solid/react';\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='FAIR metadata wizard 🧙‍♂️'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        {/* <Link to=\"/wizard\" className={classes.linkButton}>\n          <Tooltip title='Start metadata wizard'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n\n        <AuthButton login='Login with SOLID' logout='Logout from SOLID' className={classes.solidButton}\n          popup=\"https://inrupt.net/common/popup.html\"/>\n        <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link>\n        <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip>\n        <Tooltip title='Go to https://github.com/MaastrichtU-IDS/fair-metadata-wizard '>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard \">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\"\n            href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard/blob/master/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { IconButton, Typography, Button, FormControl, TextField, CircularProgress, Card, CardContent, CardHeader, Collapse, Snackbar } from \"@material-ui/core\";\nimport UploadIcon from '@material-ui/icons/Publish';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  input: {\n    background: 'white',\n    fontSize: '11px',\n    fontFamily: 'monospace'\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n}))\n\n\nexport default function JsonldUploader({ renderObject, onChange }: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n  \n  const [state, setState] = React.useState({\n    show_info_card: false,\n    json_error_open: false,\n    json_loaded_open: false,\n    upload_jsonld: JSON.stringify(renderObject, null, 4)\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ upload_jsonld: event.target.value})\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      // Call onChange function given by parent\n      onChange(JSON.parse(state.upload_jsonld)) \n      updateState({...state, json_loaded_open: true})\n    } catch (e) {\n      console.log(\"Invalid JSON-LD\");\n      updateState({...state, json_error_open: true})\n    }\n  }\n\n  // Close Snackbar\n  const closeJsonError = () => {\n    updateState({...state, json_error_open: false})\n  };\n  const closeJsonLoaded = () => {\n    updateState({...state, json_loaded_open: false})\n  };\n\n  return(\n    <Card style={{margin: theme.spacing(4,0)}}>\n        <CardHeader\n          style={{ textAlign: 'center'}}\n          action={\n            <IconButton style={{fontSize: '16px'}}\n              onClick={() => { updateState({ show_info_card: !state.show_info_card}) }}\n              name='show_info_card'\n              aria-expanded={state.show_info_card}\n              aria-label=\"show about\"\n            >\n              Upload&nbsp;\n              {!state.show_info_card &&\n                <ExpandMoreIcon />\n              }\n              {state.show_info_card &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          }\n          title=\"Provide your JSON-LD\"\n          subheader={\"Upload your JSON-LD as a template, and edit it easily.\"}\n        />\n\n\n        <Collapse in={state.show_info_card} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              All <code>@type</code> values autocomplete are based on the classes and properties described in the ontology.\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              The main <code>@context</code> URL is used to automatically download the related ontology as JSON-LD using Content-Negociation (accept application/json+ld). \n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              This feature has been tested with <a href=\"https://schema.org\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">https://schema.org</a> \n              , <a href=\"http://www.w3.org/ns/csvw\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">http://www.w3.org/ns/csvw</a>\n              , <a href=\"https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">the SemanticScience ontology</a>\n              , and <a href=\"https://raw.githubusercontent.com/biolink/biolink-model/master/biolink-model.ttl\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">the BioLink model</a>\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              Provide a URL to download your ontology as JSON-LD in the main <code>@context</code>, and feel free to <a href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard/issues\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">create an issue</a> on GitHub if the autocomplete does not work.\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(3)}}>\n              You can also provide the JSON-LD file URL directly via the <code>?edit=</code> parameter in the URL to send the right form to fill to a collaborator, e.g. <a href=\"https://maastrichtu-ids.github.io/fair-metadata-wizard?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json\" className={classes.link}>https://maastrichtu-ids.github.io/fair-metadata-wizard/?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json</a>\n            </Typography>\n\n            <form onSubmit={handleSubmit}>\n              <FormControl className={classes.settingsForm}>\n\n                <TextField\n                  id='uploadJsonldInput'\n                  label='JSON-LD to upload'\n                  placeholder='JSON-LD to upload'\n                  value={state.upload_jsonld}\n                  required\n                  multiline\n                  className={classes.fullWidth}\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  size='small'\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{ required: false }}\n                />\n\n                <div style={{width: '100%', textAlign: 'center'}}>\n                  <Button type=\"submit\" \n                    variant=\"contained\" \n                    className={classes.saveButton} \n                    startIcon={<UploadIcon />}\n                    color=\"secondary\" >\n                      Upload your JSON-LD\n                  </Button>\n                </div>\n                <Snackbar open={state.json_error_open} onClose={closeJsonError} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n                    The JSON-LD provided is not valid\n                  </MuiAlert>\n                </Snackbar>\n                <Snackbar open={state.json_loaded_open} onClose={closeJsonLoaded} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n                    Your JSON-LD has been loaded. Trying to load the ontology from the URL provided in @context...\n                  </MuiAlert>\n                </Snackbar>\n              </FormControl>\n            </form>\n\n          </CardContent>\n        </Collapse>\n      </Card>\n  )\n}\n\n// https://raw.githubusercontent.com/biolink/biolink-model/master/biolink-model.ttl\n\n// https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\n\nconst csvw_jsonld = {\n  \"@context\": \"http://www.w3.org/ns/csvw\",\n  \"url\": \"tree-ops.csv\",\n  \"tableSchema\": {\n    \"columns\": [{\n      \"@type\": \"Schema\",\n      \"name\": \"GID\",\n      \"titles\": \"GID\"\n    }, {\n      \"name\": \"on_street\",\n      \"titles\": \"On Street\"\n    }, {\n      \"name\": \"species\",\n      \"titles\": \"Species\"\n    }, {\n      \"name\": \"trim_cycle\",\n      \"titles\": \"Trim Cycle\"\n    }, {\n      \"name\": \"inventory_date\",\n      \"titles\": \"Inventory Date\",\n      \"datatype\": {\"base\": \"date\", \"format\": \"M/d/yyyy\"}\n    }]\n  }\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Button, Card, Chip, Grid, Snackbar, Box, IconButton, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Delete';\nimport AddObjectPropertyIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport AddDataPropertyIcon from '@material-ui/icons/PlaylistAdd';\nimport AddObjectArrayIcon from '@material-ui/icons/AccountTree';\nimport AddDataArrayIcon from '@material-ui/icons/PostAdd';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    // color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  addEntryButton: {\n    textTransform: 'none',\n    marginLeft: theme.spacing(2),\n    // marginTop: theme.spacing(2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  autocomplete: {\n    marginRight: theme.spacing(2)\n  },\n  formInput: {\n    background: 'white',\n    width: '100%'\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\nconst renameKey = (object: any, old_key: any, new_key: any): any => {\n  if (old_key !== new_key) {\n    // @ts-ignore\n    Object.defineProperty(object, new_key, Object.getOwnPropertyDescriptor(object, old_key));\n    delete object[old_key];\n  }\n  return object\n};\n\nexport default function RenderObjectForm(props: any) {\n  // Recursive component to display a JSON-LD object as form\n  const renderObject = props.renderObject;\n  const onChange = props.onChange;\n  const ontologyObject = props.ontologyObject;\n  const fullJsonld = props.fullJsonld;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [state, setState] = React.useState({\n    autocompleteOntologyOptions: [],\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    renderObject[event.target.id] = event.target.value\n    // call onChange function given by parent\n    onChange(renderObject) \n  }\n  const handleRecursiveChange = (property: any, subSelections: any) => {\n    renderObject[property] = subSelections;\n    onChange(renderObject);\n  }\n  \n  const handleAddEntry = (property: any, event: any) => {\n    if (typeof renderObject[property][0] === 'string') {\n      // If the array entries are strings and not objects\n      renderObject[property].push(property + ' ' + renderObject[property].length);\n    } else if (renderObject[property].length > 0) {\n      // Use {...object} to clone the object\n      renderObject[property].push({...renderObject[property][0]});\n    }\n    onChange(renderObject);\n  }\n  // const handleRemoveEntry = (property: any, event: any) => {\n  //   console.log(property);\n  //   renderObject.splice(property, 1);\n  //   onChange(renderObject);\n  // }\n  const handleAddProperty = (property: any, event: any) => {\n    // if (typeof renderObject[property][0] === 'string') {\n    //   // If the array entries are strings and not objects\n    //   renderObject[property].push(property + ' ' + renderObject[property].length);\n    // } else if (renderObject[property].length > 0) {\n    //   // Use {...object} to clone the object\n    //   renderObject[property].push({...renderObject[property][0]});\n    // }\n    if (property === 'objectProperty') {\n      renderObject['property'] = {\n        '@type': 'Object Type',\n        'property': 'value',\n      }\n    } else if (property === 'objectArray') {\n      renderObject['property'] = [{\n        '@type': 'Object Type',\n        'property': 'value',\n      }]\n    } else if (property === 'dataArray') {\n      renderObject['property'] = [\n        'value',\n      ]\n    } else {\n      renderObject['property'] = 'value'\n    }\n    onChange(renderObject);\n  }\n  const handleRemoveProperty = (property: any, event: any): any => {\n    delete renderObject[property];\n    onChange(renderObject);\n  }\n\n  function getConceptSearchDescription(concept: any) {\n    // ADD ONTOLOGY: Here to add exceptions when handling concepts labels\n    // TODO: improve resolution of labels, quick hack to work with schema.org and csvw\n    let search_description = ''\n    if (concept['rdfs:label']) {\n      if (typeof concept['rdfs:label'] === 'string') search_description = search_description + concept['rdfs:label'];\n      if (concept['rdfs:label']['en']) search_description = search_description + concept['rdfs:label']['en'];\n    }\n    if (concept['rdfs:comment']) {\n      if (typeof concept['rdfs:comment'] === 'string') search_description = search_description + concept['rdfs:comment'];\n      if (concept['rdfs:comment']['en']) search_description = search_description + concept['rdfs:comment']['en'];\n    }\n    if (concept['http://www.w3.org/2000/01/rdf-schema#label']) {\n      if (typeof concept['http://www.w3.org/2000/01/rdf-schema#label'] === 'string') search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'];\n      if (concept['http://www.w3.org/2000/01/rdf-schema#label'][0] && concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'];\n    }\n    if (concept['http://www.w3.org/2004/02/skos/core#definition']) {\n      if (typeof concept['http://www.w3.org/2004/02/skos/core#definition'] === 'string') search_description = search_description + concept['http://www.w3.org/2004/02/skos/core#definition'];\n      if (concept['http://www.w3.org/2004/02/skos/core#definition'][0] && concept['http://www.w3.org/2004/02/skos/core#definition'][0]['@value']) search_description = search_description + concept['http://www.w3.org/2004/02/skos/core#definition'][0]['@value'];\n    }\n    return search_description;\n  }\n\n  // TODO: Delay search:\n  // StackOverflow: https://stackoverflow.com/questions/23123138/perform-debounce-in-react-js\n  // Code example: https://github.com/slorber/react-async-hook/blob/master/example/index.tsx\n  // OR: const WAIT_INTERVAL = 500\n  // let timerID: any\n  // clearTimeout(timerID)\n  //   timerID = setTimeout(() => {\n  //     console.log('some action after delay autocomplete')\n  //   })\n  function handleAutocompleteOntologyOptions(event: any) {\n    // Get autocomplete options from searching the provided @context ontology JSON-LD\n    let inputText = '';\n    if (event && event.target){\n      if (event.target.value && event.target.value !== 0) {\n        inputText = event.target.value;\n      } else {\n        inputText = event.target.innerText;\n      }\n    }\n    if (inputText) {\n      // Search for matching concepts in the ontology JSON-LD\n      let conceptsArray: any = []\n      const ontologyGraph = ontologyObject['@graph']\n      if (Array.isArray(ontologyGraph)) {\n        // If @graph is array of entities (e.g. schema.org)\n        conceptsArray = ontologyGraph\n          .filter((concept: any) => {\n            return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n          })\n      } else {\n        // If @graph is object of arrays of entities (e.g. csvw)\n        Object.keys(ontologyGraph).map((graphLabel: any) => {\n          if (ontologyGraph[graphLabel] && Array.isArray(ontologyGraph[graphLabel])) {\n            conceptsArray = conceptsArray.concat(ontologyGraph[graphLabel]\n              .filter((concept: any) => {\n                return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n              })\n            )\n          }\n        })\n      }\n      updateState({\n        autocompleteOntologyOptions: conceptsArray.sort((a: any, b: any) => {\n          if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n            // Handle when array of types provided (e.g. SIO via rdflib)\n            return a['@type'][0] < b['@type'][0] ? 1 : -1\n          } else {\n            return a['@type'] < b['@type'] ? 1 : -1\n          }\n        })\n      })\n    }\n  }\n\n  // https://betterprogramming.pub/recursive-rendering-with-react-components-10fa07c45456\n  return (\n    <div>\n      {Object.keys(renderObject).map((property: any, key: number) => (\n        <div key={key}>\n          {/* Ignore all properties starting by @wizard */}\n          {!property.startsWith('@wizard') &&\n            <>\n              {/* <Box display=\"flex\"> */}\n              <Grid container>\n                { fullJsonld['@wizardQuestions'] && fullJsonld['@wizardQuestions'][property] &&\n                  // Display the @wizardQuestions if provided for this property\n                  <Grid item xs={12}>\n                    <Typography variant=\"body1\" style={{fontWeight: 900, textAlign: 'left', marginTop: theme.spacing(1), marginLeft: theme.spacing(2)}}>\n                      {fullJsonld['@wizardQuestions'][property]}\n                    </Typography>\n                  </Grid>\n                }\n                {property !== '@context' &&\n                  // Button to delete any property object\n                  <Grid item>\n                    <IconButton onClick={(subSelections: any) => handleRemoveProperty(property, subSelections)}\n                      style={{ margin: theme.spacing(1,1) }}\n                      className={classes.addEntryButton} \n                      disabled={property === '0' || property === '@type'}\n                      color=\"default\" >\n                        <RemoveIcon />\n                    </IconButton>\n                  </Grid>\n                }\n                {property === '@type' &&\n                  <Grid item xs={11} md={9}>\n                    {/* Autocomplete for @types */}\n                    <Autocomplete\n                      key={property + key}\n                      id={property}\n                      // value={ { ['rdfs:label']: renderObject[property]}}\n                      defaultValue={{'rdfs:label': renderObject[property]}}\n                      options={state.autocompleteOntologyOptions}\n                      onInputChange={handleAutocompleteOntologyOptions}\n                      onSelect={handleAutocompleteOntologyOptions}\n\n                      // ADD ONTOLOGY: fix how the entity id/label is retrieved here (main outcome of the input)\n                      onChange={(event, newInputValue: any) => {\n                        if (newInputValue) {\n                          if (newInputValue['rdfs:label']) {\n                            // TODO: improve, make it more generic after normalizing JSON-LD?\n                            if (newInputValue['rdfs:label']['en']) {\n                              // Handle CSVW label with lang\n                              renderObject[property] = newInputValue['rdfs:label']['en']\n                            } else {\n                              renderObject[property] = newInputValue['rdfs:label']\n                            }\n                          } else if(newInputValue['@id']) {\n                            // This is more semantically accurate but it imports the whole concept object\n                            // We could use the @id URI\n                            renderObject[property] = newInputValue['@id']\n                          } else {\n                            // This is more semantically accurate but it imports the whole concept object\n                            // We could use the @id URI\n                            renderObject[property] = newInputValue\n                          }\n                          onChange(renderObject)\n                        }\n                      }}\n                      getOptionSelected={(option: any, selectedValue: any): any => {\n                        // Handle option label when provided with rdfs:label or direct\n                        if (option['rdfs:label']) {\n                          if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                          if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                        }\n                        if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                          return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                        }\n                        if (option['@id']) {\n                          return option['@id'] === selectedValue['@id']\n                        }\n                        return option === selectedValue\n                      }}\n                      getOptionLabel={(option: any): any => {\n                        // Handle option label when provided with rdfs:label or direct\n                        if (option['rdfs:label']) {\n                          if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                          if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                        }\n                        if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                          return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                        }\n                        if (option['@id']) {\n                          return option['@id']\n                        }\n                        return option\n                      }}\n                      groupBy={(option: any): any => {\n                        if (option['@type'] && Array.isArray(option['@type'])) {\n                          // Handle when array of types provided (e.g. SIO via rdflib)\n                          return option['@type'][0]\n                        } else {\n                          return option['@type']\n                        }\n                      }}\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          size='small'\n                          label=\"@type\"\n                          placeholder=\"@type\"\n                          className={classes.formInput}\n                        />\n                      )}\n                      // freeSolo={true}\n                      // includeInputInList={true}\n                      // ListboxProps={{\n                      //   className: classes.formInput,\n                      // }}\n                      // defaultValue={[top100Films[13]]}\n                      // multiple\n                    />\n                  </Grid>\n                }\n\n                {/* If property is a string : TextInput */}\n                {(typeof renderObject[property] === 'string' && property !== '@type') &&\n                  <>\n                    { !property.startsWith('@') && !Array.isArray(renderObject) &&\n                      <Grid item xs={4} md={3}>\n                        {/* Autocomplete for \"Data Properties\" properties */}\n                        <Autocomplete\n                          key={property + key}\n                          id={property}\n                          className={classes.autocomplete}\n                          // value={ { ['rdfs:label']: renderObject[property]}}\n                          defaultValue={{'rdfs:label': property}}\n                          options={state.autocompleteOntologyOptions}\n                          onInputChange={handleAutocompleteOntologyOptions}\n                          onSelect={handleAutocompleteOntologyOptions}\n                          onChange={(event, newInputValue: any) => {\n                            // ADD ONTOLOGY: fix how the entity id/label is retrieved (main outcome of the input)\n                            if (newInputValue) {\n                              let newProperty = ''\n                              if (newInputValue['rdfs:label']) {\n                                // TODO: improve, make it more generic after normalizing JSON-LD?\n                                if (newInputValue['rdfs:label']['en']) {\n                                  // Handle CSVW label with lang\n                                  newProperty = newInputValue['rdfs:label']['en']\n                                } else {\n                                  newProperty = newInputValue['rdfs:label']\n                                }\n                              } else if(newInputValue['@id']) {\n                                // This is more semantically accurate but it imports the whole concept object\n                                // We could use the @id URI\n                                renderObject[property] = newInputValue['@id']\n                              } else {\n                                newProperty = newInputValue\n                              }\n                              if (newProperty) renameKey(renderObject, property, newProperty);\n                              onChange(renderObject)\n                            }\n                          }}\n                          groupBy={(option: any): any => {\n                            if (option['@type'] && Array.isArray(option['@type'])) {\n                              // Handle when array of types provided (e.g. SIO via rdflib)\n                              return option['@type'][0]\n                            } else {\n                              return option['@type']\n                            }\n                          }}\n                          getOptionSelected={(option: any, selectedValue: any): any => {\n                            // Handle option label when provided with rdfs:label or direct\n                            if (option['rdfs:label']) {\n                              if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                              if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                            }\n                            if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                              return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                            }\n                            return option === selectedValue\n                          }}\n                          getOptionLabel={(option: any): any => {\n                            // Handle option label when provided with rdfs:label or direct\n                            if (option['rdfs:label']) {\n                              if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                              if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                            }\n                            if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                              return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                            }\n                            return option\n                          }}\n                          renderInput={params => (\n                            <TextField\n                              {...params}\n                              variant=\"filled\"\n                              size='small'\n                              label=\"Data Property\"\n                              placeholder=\"Data Property\"\n                              className={classes.formInput}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    }\n                    {/* Full width for TextField on small screen 60% for bigger */}\n                    <Grid item xs={12} md={7}>\n                      {/* TextField for \"Data Properties\" value */}\n                      <TextField\n                        id={property}\n                        multiline\n                        label={property}\n                        placeholder={property}\n                        value={renderObject[property]}\n                        className={classes.fullWidth}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                        size='small'\n                        InputProps={{\n                          className: classes.formInput\n                        }}\n                        required\n                        InputLabelProps={{ required: false }}\n                        // All field are required but we hide the *\n                      />\n                    </Grid>\n                    {/* { Array.isArray(renderObject) && property !== '0' &&\n                      <Grid item>\n                        <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                          variant=\"contained\" \n                          size=\"small\"\n                          style={{ textTransform: 'none', marginLeft: theme.spacing(2), marginTop: theme.spacing(1) }}\n                          className={classes.addEntryButton} \n                          startIcon={<RemoveIcon />}\n                          color=\"primary\" >\n                            Delete\n                        </Button>\n                      </Grid>\n                    } */}\n                  </>\n                }\n\n                {/* If property is an object : RenderObjectForm recursion */}\n                {(typeof renderObject[property] === 'object' && renderObject[property]) &&\n                  // TODO: improve width handling within the Grid\n                  <Grid item xs={11}>\n                    <Card elevation={4} className={classes.paperPadding} style={{width: '100%'}}>\n                      <Grid container>\n                        { Array.isArray(renderObject) &&\n                          <Grid item>\n                            <Chip style={{ marginBottom: theme.spacing(1), marginLeft: theme.spacing(1)}} \n                              label={property}\n                            />\n                          </Grid>\n                        }\n                        { !Array.isArray(renderObject) &&\n                          <Grid item xs={5} md={3}>\n                            {/* Autocomplete for \"Object Properties\" properties */}\n                            <Autocomplete\n                              key={property + key}\n                              id={property}\n                              // value={ { ['rdfs:label']: renderObject[property]}}\n                              defaultValue={{'rdfs:label': property}}\n                              options={state.autocompleteOntologyOptions}\n                              onInputChange={handleAutocompleteOntologyOptions}\n                              onSelect={handleAutocompleteOntologyOptions}\n                              onChange={(event, newInputValue: any) => {\n                                // ADD ONTOLOGY: fix how the entity id/label is retrieved (main outcome of the input) \n                                if (newInputValue) {\n                                  let newProperty = ''\n                                  if (newInputValue['rdfs:label']) {\n                                    // TODO: improve, make it more generic after normalizing JSON-LD?\n                                    if (newInputValue['rdfs:label']['en']) {\n                                      // Handle CSVW label with lang\n                                      newProperty = newInputValue['rdfs:label']['en']\n                                    } else {\n                                      newProperty = newInputValue['rdfs:label']\n                                    }\n                                  } else if(newInputValue['@id']) {\n                                    // This is more semantically accurate but it imports the whole concept object\n                                    // We could use the @id URI\n                                    renderObject[property] = newInputValue['@id']\n                                  } else {\n                                    newProperty = newInputValue\n                                  }\n                                  if (newProperty) renameKey(renderObject, property, newProperty);\n                                  onChange(renderObject)\n                                }\n                              }}\n                              groupBy={(option: any): any => {\n                                if (option['@type'] && Array.isArray(option['@type'])) {\n                                  // Handle when array of types provided (e.g. SIO via rdflib)\n                                  return option['@type'][0]\n                                } else {\n                                  return option['@type']\n                                }\n                              }}\n                              getOptionSelected={(option: any, selectedValue: any): any => {\n                                // Handle option label when provided with rdfs:label or direct\n                                if (option['rdfs:label']) {\n                                  if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                                  if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                                }\n                                if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                                  return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                                }\n                                return option === selectedValue\n                              }}\n                              getOptionLabel={(option: any): any => {\n                                // Handle option label when provided with rdfs:label or direct\n                                if (option['rdfs:label']) {\n                                  if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                                  if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                                }\n                                if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                                  return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                                }\n                                return option\n                              }}\n                              renderInput={params => (\n                                <TextField\n                                  {...params}\n                                  variant=\"filled\"\n                                  size='small'\n                                  label=\"Object Property\"\n                                  placeholder=\"Object Property\"\n                                  className={classes.formInput}\n                                />\n                              )}\n                              // freeSolo={true}\n                              // includeInputInList={true}\n                              // ListboxProps={{\n                              //   className: classes.formInput,\n                              // }}\n                              // defaultValue={[top100Films[13]]}\n                              // multiple\n                            />\n                          </Grid>\n                        }\n                        {/* Display question in Object (duplicate with before every object) */}\n                        {/* { fullJsonld['@wizardQuestions'] && fullJsonld['@wizardQuestions'][property] &&\n                          <Grid item>\n                            <Typography variant=\"body1\" style={{fontWeight: 900, textAlign: 'left', marginTop: theme.spacing(3), marginLeft: theme.spacing(1)}}>\n                              {fullJsonld['@wizardQuestions'][property]}\n                            </Typography>\n                          </Grid>\n                        } */}\n                        {/* { Array.isArray(renderObject) && property !== '0' &&\n                          <Grid item>\n                            <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                              variant=\"contained\" \n                              size=\"small\"\n                              style={{ textTransform: 'none', marginLeft: theme.spacing(2) }}\n                              className={classes.addEntryButton} \n                              startIcon={<RemoveIcon />}\n                              color=\"primary\" >\n                                Delete\n                            </Button>\n                          </Grid>\n                        } */}\n                        { Array.isArray(renderObject[property]) &&\n                          <Grid item>\n                            {/* Create Add entry button at the top of the list, if the property value is an array */}\n                            <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                              style={{marginTop: theme.spacing(3)}}\n                              variant=\"contained\" \n                              size=\"small\"\n                              className={classes.addEntryButton} \n                              startIcon={<AddIcon />}\n                              color=\"primary\" >\n                                Add {property} entry\n                            </Button>\n                          </Grid>\n                        }\n                      </Grid>\n\n                      {/* Recursively call RenderObjectForm to render property values that are Objects */}\n                      <RenderObjectForm\n                        renderObject={renderObject[property]}\n                        onChange={(subSelections: any) => handleRecursiveChange(property, subSelections)}\n                        ontologyObject={ontologyObject}\n                        fullJsonld={fullJsonld}\n                      />\n                      { Array.isArray(renderObject[property]) &&\n                        // Create Add entry button at the bottom of the list, if the property value is an array\n                        <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                          style={{marginTop: theme.spacing(1)}}\n                          variant=\"contained\" \n                          size=\"small\"\n                          className={classes.addEntryButton} \n                          startIcon={<AddIcon />}\n                          color=\"primary\" >\n                            Add {property} entry\n                        </Button>\n                      }\n                    </Card>\n                  </Grid>\n                }\n              {/* </Box> */}\n              </Grid>\n            </>\n          }\n        </div>\n      ))}\n      { typeof renderObject === 'object' && !Array.isArray(renderObject) &&\n        <>\n          {/* Buttons to add new properties or arrays for each object */}\n          <Button onClick={(subSelections: any) => handleAddProperty('dataProperty', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.addEntryButton} \n            startIcon={<AddDataPropertyIcon />}\n            color=\"primary\" >\n              Data Property\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('dataArray', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.addEntryButton} \n            startIcon={<AddDataArrayIcon />}\n            color=\"primary\" >\n              Data array\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('objectProperty', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.addEntryButton} \n            startIcon={<AddObjectPropertyIcon />}\n            color=\"primary\" >\n              Object Property\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('objectArray', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.addEntryButton} \n            startIcon={<AddObjectArrayIcon />}\n            color=\"primary\" >\n              Object array\n          </Button>\n        </>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Button, Card, FormControl, Snackbar } from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport DownloadJsonldIcon from '@material-ui/icons/Description';\nimport axios from 'axios';\nconst $rdf = require('rdflib')\nimport { LoggedIn, LoggedOut, Value } from '@solid/react';\n// import * as jsonld from 'jsonld'\n// import {$rdf} from 'rdflib'\n// const jsonld = require('jsonld')\n\nimport JsonldUploader from \"../components/JsonldUploader\";\nimport RenderObjectForm from \"../components/RenderObjectForm\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    // color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  addEntryButton: {\n    textTransform: 'none',\n    marginLeft: theme.spacing(2),\n    // marginTop: theme.spacing(2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  autocomplete: {\n    marginRight: theme.spacing(2)\n  },\n  formInput: {\n    background: 'white',\n    width: '100%'\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\nexport default function JsonldWizard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  // useLocation hook to get URL params\n  let location = useLocation();  \n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    wizard_jsonld: wizard_jsonld,\n    jsonld_uri_provided: null,\n    ontology_jsonld: {},\n    ontoload_error_open: false,\n    ontoload_success_open: false,\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n  \n  // Original form and output:\n  // Questions: https://github.com/kodymoodley/fair-metadata-generator/blob/main/questions.csv\n  // Full output: https://github.com/kodymoodley/fair-metadata-html-page-generator/blob/main/testdata/inputdata/test.jsonld\n\n  React.useEffect(() => {\n    // Get the edit URL param if provided, and download ontology if @context changed\n    // Ontology is stored in state.ontology_jsonld \n    // and passed to renderObjectForm to resolve classes and properties\n    const params = new URLSearchParams(location.search + location.hash);\n    let jsonld_uri_provided = params.get('edit');\n    if (jsonld_uri_provided) {\n      axios.get(jsonld_uri_provided)\n        .then(res => {\n          updateState({\n            wizard_jsonld: res.data,\n            jsonld_uri_provided: jsonld_uri_provided,\n          })\n          downloadOntology(res.data['@context'])\n        })\n    } else {\n      downloadOntology(state.wizard_jsonld['@context'])\n    }\n    \n  }, [state.wizard_jsonld['@context']])\n\n  const downloadOntology  = (contextUrl: string) => {\n    // Download the ontology JSON-LD at start\n    if (contextUrl.startsWith('https://schema.org') || contextUrl.startsWith('https://schema.org')) {\n      // Schema.org does not enable content-negociation \n      contextUrl = 'https://schema.org/version/latest/schemaorg-current-https.jsonld'\n    }\n    if (contextUrl.startsWith('http://')) {\n      // Resolving http:// ontologies is prevented by mixed active content (query http from https)\n      // We would need to deploy on our own DNS to use http (https is forced on github.io URLs)\n      contextUrl = contextUrl.replace('http://', 'https://')\n    }\n    // Try to download the ontology provided in @context URL as JSON-LD\n    // curl -iL -H 'Accept: application/ld+json' http://www.w3.org/ns/csvw\n    axios.defaults.headers.common['Accept'] = 'application/ld+json'\n    axios.get(contextUrl)\n      .then(res => {\n        // console.log('ontology downloaded!')\n        // console.log(res.data)\n        // if not json\n        if (typeof res.data !== 'object') {\n          // If not object, we try to parse\n          // const jsonLDList = await jsonld.fromRDF(result.quadList)\n          // TODO: support other types than just RDF/XML\n          toJSONLD(res.data, contextUrl)\n            .then((jsonld_rdf) => {\n              console.log('Ontology downloaded, and converted to JSON-LD RDF:');\n              console.log(jsonld_rdf);\n              updateState({\n                ontology_jsonld: {\n                  '@context': contextUrl,\n                  '@graph': jsonld_rdf\n                }\n              })\n              updateState({ontoload_success_open: true})\n              // jsonld.flatten(doc, (err: any, flattened: any) => {\n              //     console.log('flattened')\n              //     console.log(flattened)\n              //     // jsonld.frame(flattened, frame, (err: any, framed: any) => {\n              //     //     resolve(framed)\n              //     // })\n              // })\n            })\n        } else {\n          updateState({\n            ontology_jsonld: res.data\n          })\n          updateState({ontoload_success_open: true})\n        }\n      })\n      .catch(error => {\n        updateState({ontoload_error_open: true})\n        console.log(error)\n      })\n  }\n\n  const toJSONLD = (data: any, uri: any) => {\n    // Convert RDF to JSON-LD using rdflib\n    let rdf_format = 'application/rdf+xml';\n    if (uri.endsWith('.ttl')) rdf_format = 'text/turtle'\n    if (uri.endsWith('.nq')) rdf_format = 'application/n-quads'\n    // Or text/x-nquads\n    if (uri.endsWith('.nt')) rdf_format = 'application/n-triples'\n    if (uri.endsWith('.n3')) rdf_format = 'text/n3'\n    if (uri.endsWith('.trig')) rdf_format = 'application/trig'\n    return new Promise((resolve, reject) => {\n        let store = $rdf.graph()\n        let doc = $rdf.sym(uri);\n        $rdf.parse(data, store, uri, rdf_format)\n        // console.log(store)\n        $rdf.serialize(doc, store, uri, 'application/ld+json', (err: any, jsonldData: any) => {\n          return resolve(JSON.parse(jsonldData)\n            .sort((a: any, b: any) => {\n              if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n                // Handle when array of types provided (e.g. SIO via rdflib)\n                return a['@type'][0] < b['@type'][0] ? 1 : -1\n              } else {\n                return a['@type'] < b['@type'] ? 1 : -1\n              }\n            })\n        )\n      })\n    })\n  }\n\n  const handleSubmit  = (event: React.FormEvent) => {\n    // Trigger JSON-LD file download\n    event.preventDefault();\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/turtle;charset=utf-8,' + encodeURIComponent(JSON.stringify(state.wizard_jsonld, null, 4)));\n    element.setAttribute('download', 'metadata.json');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    setState({...state, open: true})\n  }\n\n  // Close Snackbars\n  const closeOntoloadError = () => {\n    updateState({...state, ontoload_error_open: false})\n  };\n  const closeOntoloadSuccess = () => {\n    updateState({...state, ontoload_success_open: false})\n  };\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n          FAIR metadata wizard 🧙‍♂️\n      </Typography>\n\n      <LoggedIn>\n        <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n          Welcome <Value src=\"user.name\"/>!\n        </Typography>\n      </LoggedIn>\n      {/* <LoggedOut>\n        <p>\n          Please login with SOLID\n        </p>\n      </LoggedOut> */}\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n        Load and edit JSON-LD RDF metadata files in a user-friendly web interface, with autocomplete for <code>@types</code>, based on the classes and properties of the ontology magically loaded from <code>@context</code> ✨️\n      </Typography>\n\n      {/* Display the JSON-LD file uploader (if no ?edit= URL param provided) */}\n      {!state.jsonld_uri_provided &&\n        <JsonldUploader renderObject={state.wizard_jsonld} \n          onChange={(wizard_jsonld: any) => {updateState({wizard_jsonld})}} />\n      }\n\n      <Snackbar open={state.ontoload_error_open} onClose={closeOntoloadError} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n          The ontology at the URL {state.wizard_jsonld['@context']} provided in @context could not be loaded\n        </MuiAlert>\n      </Snackbar>\n      <Snackbar open={state.ontoload_success_open} onClose={closeOntoloadSuccess} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\n          The ontology {state.wizard_jsonld['@context']} from @context has been loaded successfully, it will be used for @types autocomplete\n        </MuiAlert>\n      </Snackbar>\n\n      <form onSubmit={handleSubmit}>\n        <FormControl className={classes.settingsForm}>\n\n          {/* First call of RenderObjectForm (the rest is handled recursively in this component) */}\n          <RenderObjectForm renderObject={state.wizard_jsonld} ontologyObject={state.ontology_jsonld}\n            onChange={(wizard_jsonld: any) => {updateState({wizard_jsonld})} }\n            fullJsonld={state.wizard_jsonld}\n          />\n\n          {/* Button to download the JSON-LD */}\n          <div style={{width: '100%', textAlign: 'center'}}>\n            <Button type=\"submit\" \n              variant=\"contained\" \n              className={classes.saveButton} \n              startIcon={<DownloadJsonldIcon />}\n              color=\"secondary\" >\n                Download metadata in JSON-LD format\n            </Button>\n          </div>\n        </FormControl>\n      </form>\n    </Container>\n  )\n}\n\n\nconst wizard_jsonld = {\n  \"@context\": \"https://schema.org\",\n  \"@wizardQuestions\": {\n    'name': 'Provide the name of this entity:',\n    'description': 'Give a short description of the content:',\n    'creator': 'Provide the details of the person who created, or initiated, the creation of this work:',\n    'contributor': 'Other persons who contributed to, or co-authored, the dataset:',\n    'publisher': 'Person, or organization, who published this work:',\n    'inLanguage': 'What language is used in the description of this dataset? Use ISO 2 language code e.g. EN for English',\n    'version': 'What is the version number for this dataset? e.g. 1.1.1 or v1.2',\n    'license': 'Link to the full text of the terms of use (license) for this dataset:',\n    'encodingFormat': 'What is the file format of this data?',\n    'url': 'Link to the website or homepage:',\n    'temporalCoverage': 'What is the creation or publishing date range for the documents or contents of this dataset? Use https://en.wikipedia.org/wiki/ISO_8601#Time_intervals format - e.g. 2007-03-01/2008-05-11:',\n    'keywords': 'Provide keywords describing the content in this dataset:',\n    'distribution': 'Supply a direct download link for this dataset:',\n    'contentSize': 'How large is the download file size e.g. 128KB, 54MB, 1.5GB?',\n    'isBasedOn': 'Was this dataset generated with the aid of or using a piece of software?',\n    'citation': 'Is there an academic publication which describes or centrally makes use of this dataset?',\n    'datePublished': 'On what date was the dataset published? YYYY-MM-DD',\n    'dateCreated': 'On what date was the dataset created? YYYY-MM-DD',\n    'affiliation': 'This person is affiliated to or employed by:',\n    'logo': 'Link to an image depicting the logo of this organisation:',\n    'image': 'Provide a link (URL) to a profile photo of the author of the dataset:',\n    'sameAs': 'Provide a Digital Object Identifier (DOI) for this publication:',\n    'frequency': 'How often does a new version get published for this dataset? e.g. daily, weekly, monthly',\n    // 'encodingFormat': 'What is the download file format e.g. Zip archive, CSV file, JSON file etc:',\n  },\n  \"@type\": \"Dataset\",\n  \"name\": \"ECJ case law text similarity analysis\",\n  \"description\": \"results from a study to analyse how closely the textual similarity of ECJ cases resembles the citation network of the cases.\",\n  \"version\": \"v2.0\",\n  \"url\": \"https://doi.org/10.5281/zenodo.4228652\",\n  \"license\": \"https://www.gnu.org/licenses/agpl-3.0.txt\",\n  \"encodingFormat\": \"CSV\",\n  \"temporalCoverage\": \"2019-09-14/2020-07-01\",\n  \"dateCreated\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2019-09-14\"\n  },\n  \"datePublished\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2020-07-01\"\n  },\n  \"distribution\": {\n      \"@type\": \"DataDownload\",\n      \"contentUrl\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://zenodo.org/record/4228652/files/docona_cjeu_results_2018_v2_html.zip?download=1\"\n      },\n      \"encodingFormat\": \"application/zip\",\n      \"contentSize\": \"1.1MB\"\n  },\n  \"inLanguage\": {\n      \"@type\": \"Language\",\n      \"name\": \"EN\",\n      \"alternateName\": \"EN\"\n  },\n  \"keywords\": [\n      \"case law\",\n      \"court decisions\",\n      \"text similarity\",\n      \"network analysis\",\n  ],\n  \"creator\": {\n      \"@type\": \"Person\",\n      \"name\": \"concat @givenName @familyName\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"contributor\": [\n      {\n          \"@type\": \"Person\",\n          \"givenName\": \"Pedro\",\n          \"familyName\": \"Hernandez Serrano\",\n          \"jobTitle\": \"Data Scientist\",\n          \"email\": \"p.hernandezserrano@maastrichtuniversity.nl\",\n          \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/p.hernandezserrano/p.hernandezserrano_PP%20%287%20of%2013%29.jpg?itok=IUdreoIw&timestamp=1610395201\",\n          \"affiliation\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Institute of Data Science\",\n              \"url\": {\n                  \"@type\": \"URL\",\n                  \"@value\": \"https://www.maastrichtuniversity.nl/research/institute-data-science\"\n              },\n              \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"contentUrl\": \"https://avatars.githubusercontent.com/u/36262526?s=280&v=4\"\n              }\n          }\n      }\n  ],\n  \"publisher\": {\n      \"@type\": \"Person\",\n      \"name\": \"Kody Moodley\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"isBasedOn\": [\n      {\n          \"@type\": \"SoftwareApplication\",\n          \"name\": \"docona\",\n          \"description\": \"DoConA (Document Content and Citation Analysis Pipeline) is an open source, configurable and extensible Python tool to analyse the level of agreement between the citation network of a set of textual documents and the textual similarity of these documents.\",\n          \"applicationCategory\": \"Python script\",\n          \"operatingSystem\": \"cross-platform\",\n          \"version\": \"1.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://github.com/MaastrichtU-IDS/docona\"\n          }\n      },\n      {\n          \"@type\": \"CreativeWork\",\n          \"name\": \"ECJ case law and citation network\",\n          \"description\": \"Citation network and full text documents of each judgement by the Court of Justice of the European Union that was published publicly on the EUR-LEX website (https://eur-lex.europa.eu/homepage.html) up until December 2018\",\n          \"version\": \"2.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://doi.org/10.5281/zenodo.3926736\"\n          }\n      }\n  ],\n  \"citation\": {\n      \"@type\": \"CreativeWork\",\n      \"name\": \"Similarity and Relevance of Court Decisions: A Computational Study on CJEU Cases\",\n      \"creator\": [\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Kody Moodley\"\n          },\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Michel Dumontier\"\n          }\n      ],\n      \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"IOS press\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.iospress.nl\"\n          }\n      },\n      \"datePublished\": {\n          \"@type\": \"Date\",\n          \"@value\": \"2019-12-10\"\n      },\n      \"sameAs\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://doi.org/10.3233/FAIA190307\"\n      }\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        A wizard to generate Schema.org metadata for datasets in RDF JSON-LD format.\n      </Typography>\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/fair-metadata-wizard/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/fair-metadata-wizard/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport { Text, View, Platform } from \"react-native\";\nimport { Router, Route, Link } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport JsonldWizard from \"./src/pages/JsonldWizard\";\nimport About from \"./src/pages/About\";\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    primary: { light: '#63a4ff', main: blue[700], dark: '#004ba0' },\n    secondary: { light: '#ff7043', main: '#ff5722', dark: '#087f23' },\n    // Green:\n    // secondary: { light: '#4caf50', main: '#087f23', dark: '#00600f' },\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500,\n    \"fontSize\": 11\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/fair-metadata-wizard/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        {/* <Route exact path=\"/\" component={ProjectsDashboard} /> */}\n        <Route exact path=\"/\" component={JsonldWizard} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/fair-metadata-wizard/expo-service-worker.js', { scope: '/fair-metadata-wizard/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #757575;\\n  /* background-color: #78909c; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}