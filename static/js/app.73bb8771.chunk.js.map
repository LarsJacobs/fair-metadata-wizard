{"version":3,"sources":["assets/icon.png","src/NavBar.tsx","src/Footer.tsx","src/JsonldUploader.tsx","src/JsonldWizard.tsx","src/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/fair-metadata-wizard/fair-metadata-wizard/App.css?fa54","App.css"],"names":["module","exports","useStyles","makeStyles","theme","menuButton","color","palette","common","white","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","Button","target","href","darkLink","primary","light","whiteLink","dark","footer","padding","spacing","marginTop","backgroundColor","main","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","link","secondary","input","background","fontSize","fontFamily","settingsForm","marginBottom","saveButton","margin","fullWidth","JsonldUploader","renderObject","onChange","useTheme","React","useState","show_info_card","json_error_open","json_loaded_open","upload_jsonld","JSON","stringify","state","setState","stateRef","useRef","updateState","useCallback","update","current","Card","CardHeader","action","IconButton","onClick","name","aria-expanded","aria-label","subheader","Collapse","in","timeout","unmountOnExit","CardContent","rel","onSubmit","event","preventDefault","parse","e","console","log","FormControl","TextField","id","label","placeholder","value","required","multiline","size","InputProps","type","startIcon","Snackbar","open","onClose","autoHideDuration","elevation","severity","$rdf","require","addEntryButton","marginLeft","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","JsonldWizard","location","useLocation","dialogOpen","wizard_jsonld","jsonld_uri_provided","ontology_jsonld","ontoload_error_open","ontoload_success_open","useEffect","URLSearchParams","search","hash","get","axios","then","res","data","contextUrl","startsWith","defaults","headers","toJSONLD","jsonld_rdf","catch","error","uri","mimeType","Promise","resolve","reject","store","graph","doc","sym","serialize","err","jsonldData","sort","a","b","Array","isArray","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","ontologyObject","RenderObjectForm","autocompleteOntologyOptions","handleChange","handleAddEntry","property","push","length","handleRemoveEntry","splice","getConceptSearchDescription","concept","search_description","handleAutocompleteOntologyOptions","inputText","innerText","conceptsArray","ontologyGraph","filter","toLowerCase","indexOf","Object","keys","map","graphLabel","concat","key","Autocomplete","defaultValue","options","onInputChange","onSelect","newInputValue","groupBy","option","getOptionSelected","selectedValue","getOptionLabel","renderInput","params","Grid","container","item","InputLabelProps","subSelections","Chip","handleRecursiveChange","normalFont","About","project_license","language_autocomplete","createMuiTheme","blue","typography","App","basename","View","exact","path","component","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","i","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.73bb8771.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\n\n// @ts-ignore\nimport iconImage from '../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='sticky'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='IDS Projects dashboard'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        {/* <Link to=\"/wizard\" className={classes.linkButton}>\n          <Tooltip title='Start metadata wizard'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n        <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link>\n        <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip>\n        <Tooltip title='Go to https://github.com/MaastrichtU-IDS/fair-metadata-wizard '>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard \">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\"\n            href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard/blob/master/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader, Collapse, CardActions, List, ListItem, ListItemAvatar, Avatar, ListItemText, Snackbar } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport UploadIcon from '@material-ui/icons/Publish';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\n// import { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\n// import GetAppIcon from '@material-ui/icons/GetApp';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n// import { Graph } from \"perfect-graph\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  input: {\n    background: 'white',\n    fontSize: '11px',\n    fontFamily: 'monospace'\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n}))\n\n\nexport default function JsonldUploader({ renderObject, onChange }: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n  \n  const [state, setState] = React.useState({\n    show_info_card: false,\n    json_error_open: false,\n    json_loaded_open: false,\n    upload_jsonld: JSON.stringify(renderObject, null, 4)\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ upload_jsonld: event.target.value})\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      // Call onChange function given by parent\n      onChange(JSON.parse(state.upload_jsonld)) \n      updateState({...state, json_loaded_open: true})\n    } catch (e) {\n      console.log(\"Invalid JSON-LD\");\n      updateState({...state, json_error_open: true})\n    }\n  }\n\n  // Close Snackbar\n  const closeJsonError = () => {\n    updateState({...state, json_error_open: false})\n  };\n  const closeJsonLoaded = () => {\n    updateState({...state, json_loaded_open: false})\n  };\n\n  return(\n    <Card style={{margin: theme.spacing(4,0)}}>\n        <CardHeader\n          style={{ textAlign: 'center'}}\n          action={\n            <IconButton style={{fontSize: '16px'}}\n              onClick={() => { updateState({ show_info_card: !state.show_info_card}) }}\n              name='show_info_card'\n              aria-expanded={state.show_info_card}\n              aria-label=\"show about\"\n            >\n              Upload&nbsp;\n              {!state.show_info_card &&\n                <ExpandMoreIcon />\n              }\n              {state.show_info_card &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          }\n          title=\"Provide your JSON-LD\"\n          subheader={\"Upload your JSON-LD as a template, and edit it easily.\"}\n        />\n\n\n        <Collapse in={state.show_info_card} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              All <code>@type</code> values autocomplete are based on the classes and properties described in the ontology.\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              The main <code>@context</code> URL is used to automatically download the related ontology as JSON-LD using Content-Negociation (accept application/json+ld). \n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              This feature has been tested with <a href=\"https://schema.org\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">https://schema.org</a> \n              , <a href=\"http://www.w3.org/ns/csvw\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">http://www.w3.org/ns/csvw</a> and <a href=\"https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">the SemanticScience ontology</a>.\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(3)}}>\n              Provide a URL to download your ontology as JSON-LD in the main <code>@context</code>, and feel free to <a href=\"https://github.com/MaastrichtU-IDS/fair-metadata-wizard/issues\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">create an issue</a> on GitHub if the autocomplete does not work.\n            </Typography>\n\n            <form onSubmit={handleSubmit}>\n              <FormControl className={classes.settingsForm}>\n\n                <TextField\n                  id='uploadJsonldInput'\n                  label='JSON-LD to upload'\n                  placeholder='JSON-LD to upload'\n                  value={state.upload_jsonld}\n                  required\n                  multiline\n                  className={classes.fullWidth}\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  size='small'\n                  InputProps={{\n                    className: classes.input\n                  }}\n                />\n\n                <div style={{width: '100%', textAlign: 'center'}}>\n                  <Button type=\"submit\" \n                    variant=\"contained\" \n                    className={classes.saveButton} \n                    startIcon={<UploadIcon />}\n                    color=\"secondary\" >\n                      Upload your JSON-LD\n                  </Button>\n                </div>\n                <Snackbar open={state.json_error_open} onClose={closeJsonError} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n                    The JSON-LD provided is not valid\n                  </MuiAlert>\n                </Snackbar>\n                <Snackbar open={state.json_loaded_open} onClose={closeJsonLoaded} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n                    Your JSON-LD has been loaded. Trying to load the ontology from the URL provided in @context...\n                  </MuiAlert>\n                </Snackbar>\n              </FormControl>\n            </form>\n\n          </CardContent>\n        </Collapse>\n      </Card>\n  )\n}\n\n// https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\n\nconst csvw_jsonld = {\n  \"@context\": \"http://www.w3.org/ns/csvw\",\n  \"url\": \"tree-ops.csv\",\n  \"tableSchema\": {\n    \"columns\": [{\n      \"@type\": \"Schema\",\n      \"name\": \"GID\",\n      \"titles\": \"GID\"\n    }, {\n      \"name\": \"on_street\",\n      \"titles\": \"On Street\"\n    }, {\n      \"name\": \"species\",\n      \"titles\": \"Species\"\n    }, {\n      \"name\": \"trim_cycle\",\n      \"titles\": \"Trim Cycle\"\n    }, {\n      \"name\": \"inventory_date\",\n      \"titles\": \"Inventory Date\",\n      \"datatype\": {\"base\": \"date\", \"format\": \"M/d/yyyy\"}\n    }]\n  }\n}\n","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button, Card, Chip, Grid, Snackbar } from \"@material-ui/core\";\nimport { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Delete';\nimport axios from 'axios';\n// import * as jsonld from 'jsonld'\n// import {$rdf} from 'rdflib'\n// const jsonld = require('jsonld')\nconst $rdf = require('rdflib')\n\nimport JsonldUploader from \"./JsonldUploader\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    // color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  addEntryButton: {\n    textTransform: 'none',\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  input: {\n    background: 'white',\n    fontSize: '14px',\n    width: '100%',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 1),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\nexport default function JsonldWizard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  // useLocation hook to get URL params\n  let location = useLocation();\n\n  // Original form and output:\n  // Questions: https://github.com/kodymoodley/fair-metadata-generator/blob/main/questions.csv\n  // Full output: https://github.com/kodymoodley/fair-metadata-html-page-generator/blob/main/testdata/inputdata/test.jsonld\n  \n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    wizard_jsonld: wizard_jsonld,\n    jsonld_uri_provided: null,\n    ontology_jsonld: {},\n    ontoload_error_open: false,\n    ontoload_success_open: false,\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n  \n  React.useEffect(() => {\n    // Get URL params \n    const params = new URLSearchParams(location.search + location.hash);\n    let jsonld_uri_provided = params.get('edit');\n    if (jsonld_uri_provided) {\n      axios.get(jsonld_uri_provided)\n        .then(res => {\n          updateState({\n            wizard_jsonld: res.data,\n            jsonld_uri_provided: jsonld_uri_provided,\n          })\n        })\n    }\n\n    // Download the ontology JSON-LD at start\n    let contextUrl = 'https://schema.org/'\n    if (state.wizard_jsonld['@context']) {\n      contextUrl = state.wizard_jsonld['@context']\n    }\n    if (contextUrl.startsWith('https://schema.org') || contextUrl.startsWith('https://schema.org')) {\n      // Schema.org does not enable content-negociation \n      contextUrl = 'https://schema.org/version/latest/schemaorg-current-https.jsonld'\n    }\n\n    // Try to download the ontology provided in @context URL as JSON-LD\n    // curl -iL -H 'Accept: application/ld+json' http://www.w3.org/ns/csvw\n    axios.defaults.headers.common['Accept'] = 'application/ld+json'\n    axios.get(contextUrl)\n      .then(res => {\n        // console.log('ontology downloaded!')\n        // console.log(res.data)\n        // if not json\n        if (typeof res.data !== 'object') {\n          // If not object, we try to parse\n          // const jsonLDList = await jsonld.fromRDF(result.quadList)\n          toJSONLD(res.data, contextUrl, 'application/rdf+xml')\n            .then((jsonld_rdf) => {\n              // console.log('rdf conversion done');\n              // console.log(jsonld_rdf);\n              updateState({\n                ontology_jsonld: {\n                  '@context': contextUrl,\n                  '@graph': jsonld_rdf\n                }\n              })\n              updateState({ontoload_success_open: true})\n              // jsonld.flatten(doc, (err: any, flattened: any) => {\n              //     console.log('flattened')\n              //     console.log(flattened)\n              //     // jsonld.frame(flattened, frame, (err: any, framed: any) => {\n              //     //     resolve(framed)\n              //     // })\n              // })\n            })\n        } else {\n          updateState({\n            ontology_jsonld: res.data\n          })\n          updateState({ontoload_success_open: true})\n        }\n      })\n      .catch(error => {\n        updateState({ontoload_error_open: true})\n        console.log(error)\n      })\n  }, [state.wizard_jsonld['@context']])\n\n  const toJSONLD = (data: any, uri: any, mimeType: any) => {\n    return new Promise((resolve, reject) => {\n        let store = $rdf.graph()\n        let doc = $rdf.sym(uri);\n        $rdf.parse(data, store, uri, mimeType)\n        // console.log(store)\n        $rdf.serialize(doc, store, uri, 'application/ld+json', (err: any, jsonldData: any) => {\n          return resolve(JSON.parse(jsonldData)\n            .sort((a: any, b: any) => {\n              if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n                // Handle when array of types provided (e.g. SIO via rdflib)\n                return a['@type'][0] < b['@type'][0] ? 1 : -1\n              } else {\n                return a['@type'] < b['@type'] ? 1 : -1\n              }\n            })\n        )\n      })\n    })\n  }\n\n  const handleSubmit  = (event: React.FormEvent) => {\n    // Trigger file download\n    event.preventDefault();\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/turtle;charset=utf-8,' + encodeURIComponent(JSON.stringify(state.wizard_jsonld, null, 4)));\n    element.setAttribute('download', 'metadata.json');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    setState({...state, open: true})\n  }\n\n  // Close Snackbar\n  const closeOntoloadError = () => {\n    updateState({...state, ontoload_error_open: false})\n  };\n  const closeOntoloadSuccess = () => {\n    updateState({...state, ontoload_success_open: false})\n  };\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n          FAIR metadata wizard 🧙‍♂️\n      </Typography>\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n        Load and edit JSON-LD RDF metadata files in a user-friendly web interface, with autocomplete for <code>@types</code>, based on the <code>@context</code> classes and properties\n      </Typography>\n\n      {!state.jsonld_uri_provided &&\n        <JsonldUploader renderObject={state.wizard_jsonld} \n          onChange={(wizard_jsonld: any) => {updateState({wizard_jsonld})}} />\n      }\n\n      <Snackbar open={state.ontoload_error_open} onClose={closeOntoloadError} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n          The ontology at the URL {state.wizard_jsonld['@context']} provided in @context could not be loaded\n        </MuiAlert>\n      </Snackbar>\n      <Snackbar open={state.ontoload_success_open} onClose={closeOntoloadSuccess} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\n          The ontology {state.wizard_jsonld['@context']} from @context has been loaded successfully, it will be used for @types autocomplete\n        </MuiAlert>\n      </Snackbar>\n\n      <form onSubmit={handleSubmit}>\n        <FormControl className={classes.settingsForm}>\n\n          <RenderObjectForm renderObject={state.wizard_jsonld} ontologyObject={state.ontology_jsonld}\n            onChange={(wizard_jsonld: any) => {updateState({wizard_jsonld})} }\n          />\n\n          <div style={{width: '100%', textAlign: 'center'}}>\n            <Button type=\"submit\" \n              variant=\"contained\" \n              className={classes.saveButton} \n              startIcon={<GetAppIcon />}\n              color=\"secondary\" >\n                Download metadata as JSON-LD\n            </Button>\n          </div>\n        </FormControl>\n      </form>\n    </Container>\n  )\n}\n\n// Recursive component to display a JSON-LD object as form\nconst RenderObjectForm = ({ renderObject, onChange, ontologyObject }: any) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [state, setState] = React.useState({\n    autocompleteOntologyOptions: [],\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    renderObject[event.target.id] = event.target.value\n    // call onChange function given by parent\n    onChange(renderObject) \n  }\n  const handleRecursiveChange = (property: any, subSelections: any) => {\n    renderObject[property] = subSelections;\n    onChange(renderObject);\n  }\n  \n  const handleAddEntry = (property: any, event: any) => {\n    if (typeof renderObject[property][0] === 'string') {\n      // If the array entries are strings and not objects\n      renderObject[property].push(property + ' ' + renderObject[property].length);\n    } else if (renderObject[property].length > 0) {\n      // Use {...object} to clone the object\n      renderObject[property].push({...renderObject[property][0]});\n    }\n    onChange(renderObject);\n  }\n  const handleRemoveEntry = (property: any, event: any) => {\n    renderObject.splice(property, 1);\n    onChange(renderObject);\n  }\n\n  function getConceptSearchDescription(concept: any) {\n    // TODO: improve resolution of labels, quick hack to work with schema.org and csvw\n    let search_description = ''\n    if (concept['rdfs:label']) {\n      if (typeof concept['rdfs:label'] === 'string') search_description = search_description + concept['rdfs:label'];\n      if (concept['rdfs:label']['en']) search_description = search_description + concept['rdfs:label']['en'];\n    }\n    if (concept['rdfs:comment']) {\n      if (typeof concept['rdfs:comment'] === 'string') search_description = search_description + concept['rdfs:comment'];\n      if (concept['rdfs:comment']['en']) search_description = search_description + concept['rdfs:comment']['en'];\n    }\n    if (concept['http://www.w3.org/2000/01/rdf-schema#label']) {\n      if (typeof concept['http://www.w3.org/2000/01/rdf-schema#label'] === 'string') search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'];\n      if (concept['http://www.w3.org/2000/01/rdf-schema#label'][0] && concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'];\n    }\n    return search_description;\n  }\n\n  function handleAutocompleteOntologyOptions(event: any) {\n    // Get autocomplete options from searching the provided @context ontology JSON-LD\n    let inputText = '';\n    if (event && event.target){\n      if (event.target.value && event.target.value !== 0) {\n        inputText = event.target.value;\n      } else {\n        inputText = event.target.innerText;\n      }\n    }\n    if (inputText) {\n      // Search for matching concepts in the ontology JSON-LD\n      let conceptsArray: any = []\n      const ontologyGraph = ontologyObject['@graph']\n      if (Array.isArray(ontologyGraph)) {\n        // If @graph is array of entities (e.g. schema.org)\n        conceptsArray = ontologyGraph\n          .filter((concept: any) => {\n            return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n          })\n      } else {\n        // If @graph is object of arrays of entities (e.g. csvw)\n        Object.keys(ontologyGraph).map((graphLabel: any) => {\n          if (ontologyGraph[graphLabel] && Array.isArray(ontologyGraph[graphLabel])) {\n            conceptsArray = conceptsArray.concat(ontologyGraph[graphLabel]\n              .filter((concept: any) => {\n                return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n              })\n            )\n          }\n        })\n      }\n      updateState({\n        autocompleteOntologyOptions: conceptsArray.sort((a: any, b: any) => {\n          if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n            // Handle when array of types provided (e.g. SIO via rdflib)\n            return a['@type'][0] < b['@type'][0] ? 1 : -1\n          } else {\n            return a['@type'] < b['@type'] ? 1 : -1\n          }\n        })\n      })\n    }\n  }\n\n  // https://betterprogramming.pub/recursive-rendering-with-react-components-10fa07c45456\n  return (\n    <div>\n      {Object.keys(renderObject).map((property: any, key: number) => (\n        <div key={key}>\n          {property === '@type' &&\n            <Autocomplete\n              key={property + key}\n              id={property}\n              // value={ { ['rdfs:label']: renderObject[property]}}\n              defaultValue={{'rdfs:label': renderObject[property]}}\n              options={state.autocompleteOntologyOptions}\n              onInputChange={handleAutocompleteOntologyOptions}\n              onSelect={handleAutocompleteOntologyOptions}\n              onChange={(event, newInputValue: any) => {\n                if (newInputValue) {\n                  if (newInputValue['rdfs:label']) {\n                    // TODO: Only work for schema.org\n                    renderObject[property] = newInputValue['rdfs:label']\n                  } else {\n                    // This is more semantically accurate but it imports the whole concept object\n                    // We could use the @id URI\n                    renderObject[property] = newInputValue\n                  }\n                  onChange(renderObject)\n                }\n              }}\n              groupBy={(option: any): any => {\n                if (option['@type'] && Array.isArray(option['@type'])) {\n                  // Handle when array of types provided (e.g. SIO via rdflib)\n                  return option['@type'][0]\n                } else {\n                  return option['@type']\n                }\n              }}\n              getOptionSelected={(option: any, selectedValue: any): any => {\n                // Handle option label when provided with rdfs:label or direct\n                if (option['rdfs:label']) {\n                  if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                  if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                }\n                if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                  return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                }\n                return option === selectedValue\n              }}\n              getOptionLabel={(option: any): any => {\n                // Handle option label when provided with rdfs:label or direct\n                if (option['rdfs:label']) {\n                  if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                  if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                }\n                if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                  return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                }\n                return option\n              }}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  size='small'\n                  label=\"@type\"\n                  placeholder=\"@type\"\n                  className={classes.input}\n                />\n              )}\n              // freeSolo={true}\n              // includeInputInList={true}\n              // ListboxProps={{\n              //   className: classes.input,\n              // }}\n              // defaultValue={[top100Films[13]]}\n              // multiple\n            />\n          }\n\n          {/* if property is a string : TextInput */}\n          {(typeof renderObject[property] === 'string' && property !== '@type') &&\n            <Grid container>\n              <Grid item>\n                <TextField\n                  id={property}\n                  label={property}\n                  placeholder={property}\n                  value={renderObject[property]}\n                  className={classes.fullWidth}\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  size='small'\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  required\n                  InputLabelProps={{ required: false }}\n                  // All field are required but we hide the *\n                />\n              </Grid>\n              { Array.isArray(renderObject) && property !== '0' &&\n                <Grid item>\n                  <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                    variant=\"contained\" \n                    size=\"small\"\n                    style={{ textTransform: 'none', marginLeft: theme.spacing(2) }}\n                    className={classes.addEntryButton} \n                    startIcon={<RemoveIcon />}\n                    color=\"primary\" >\n                      Delete\n                  </Button>\n                </Grid>\n              }\n            </Grid>\n          }\n\n          {/* if property is an object : RenderObjectForm recursion */}\n          {(typeof renderObject[property] === 'object' && renderObject[property]) &&\n            <Card elevation={2} className={classes.paperPadding}>\n              <Chip label={property}  style={{fontWeight: 900, marginBottom: theme.spacing(2), marginLeft: theme.spacing(1)}} />\n              { Array.isArray(renderObject) && property !== '0' &&\n                <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                  variant=\"contained\" \n                  size=\"small\"\n                  style={{ textTransform: 'none', marginLeft: theme.spacing(2) }}\n                  className={classes.addEntryButton} \n                  startIcon={<RemoveIcon />}\n                  color=\"primary\" >\n                    Delete\n                </Button>\n              }\n              { Array.isArray(renderObject[property]) &&\n                <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                  // style={{width: '100%'}}\n                  variant=\"contained\" \n                  size=\"small\"\n                  className={classes.addEntryButton} \n                  startIcon={<AddIcon />}\n                  color=\"primary\" >\n                    Add {property} entry\n                </Button>\n              }\n              <RenderObjectForm\n                renderObject={renderObject[property]}\n                onChange={(subSelections: any) => handleRecursiveChange(property, subSelections)}\n                ontologyObject={ontologyObject}\n              />\n              { Array.isArray(renderObject[property]) &&\n                <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                  // style={{width: '100%'}}\n                  variant=\"contained\" \n                  size=\"small\"\n                  className={classes.addEntryButton} \n                  startIcon={<AddIcon />}\n                  color=\"primary\" >\n                    Add {property} entry\n                </Button>\n              }\n            </Card>\n          }\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst wizard_jsonld = {\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"Dataset\",\n  \"name\": \"ECJ case law text similarity analysis\",\n  \"description\": \"results from a study to analyse how closely the textual similarity of ECJ cases resembles the citation network of the cases.\",\n  \"version\": \"v2.0\",\n  \"url\": \"https://doi.org/10.5281/zenodo.4228652\",\n  \"license\": \"https://www.gnu.org/licenses/agpl-3.0.txt\",\n  \"encodingFormat\": \"CSV\",\n  \"temporalCoverage\": \"2019-09-14/2020-07-01\",\n  \"dateCreated\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2019-09-14\"\n  },\n  \"datePublished\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2020-07-01\"\n  },\n  \"distribution\": {\n      \"@type\": \"DataDownload\",\n      \"contentUrl\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://zenodo.org/record/4228652/files/docona_cjeu_results_2018_v2_html.zip?download=1\"\n      },\n      \"encodingFormat\": \"application/zip\",\n      \"contentSize\": \"1.1MB\"\n  },\n  \"inLanguage\": {\n      \"@type\": \"Language\",\n      \"name\": \"EN\",\n      \"alternateName\": \"EN\"\n  },\n  \"keywords\": [\n      \"case law\",\n      \"court decisions\",\n      \"text similarity\",\n      \"network analysis\",\n  ],\n  \"creator\": {\n      \"@type\": \"Person\",\n      \"@wizardRequired\": true,\n      \"name\": \"concat @givenName @familyName\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"contributor\": [\n      {\n          \"@wizardMultivalueCheckArray\": true,\n          \"@type\": \"Person\",\n          \"givenName\": \"Pedro\",\n          \"familyName\": \"Hernandez Serrano\",\n          \"jobTitle\": \"Data Scientist\",\n          \"email\": \"p.hernandezserrano@maastrichtuniversity.nl\",\n          \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/p.hernandezserrano/p.hernandezserrano_PP%20%287%20of%2013%29.jpg?itok=IUdreoIw&timestamp=1610395201\",\n          \"affiliation\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Institute of Data Science\",\n              \"url\": {\n                  \"@type\": \"URL\",\n                  \"@value\": \"https://www.maastrichtuniversity.nl/research/institute-data-science\"\n              },\n              \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"contentUrl\": \"https://avatars.githubusercontent.com/u/36262526?s=280&v=4\"\n              }\n          }\n      }\n  ],\n  \"publisher\": {\n      \"@type\": \"Person\",\n      \"name\": \"Kody Moodley\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"isBasedOn\": [\n      {\n          \"@type\": \"SoftwareApplication\",\n          \"name\": \"docona\",\n          \"description\": \"DoConA (Document Content and Citation Analysis Pipeline) is an open source, configurable and extensible Python tool to analyse the level of agreement between the citation network of a set of textual documents and the textual similarity of these documents.\",\n          \"applicationCategory\": \"Python script\",\n          \"operatingSystem\": \"cross-platform\",\n          \"version\": \"1.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://github.com/MaastrichtU-IDS/docona\"\n          }\n      },\n      {\n          \"@type\": \"CreativeWork\",\n          \"name\": \"ECJ case law and citation network\",\n          \"description\": \"Citation network and full text documents of each judgement by the Court of Justice of the European Union that was published publicly on the EUR-LEX website (https://eur-lex.europa.eu/homepage.html) up until December 2018\",\n          \"version\": \"2.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://doi.org/10.5281/zenodo.3926736\"\n          }\n      }\n  ],\n  \"citation\": {\n      \"@type\": \"CreativeWork\",\n      \"name\": \"Similarity and Relevance of Court Decisions: A Computational Study on CJEU Cases\",\n      \"creator\": [\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Kody Moodley\"\n          },\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Michel Dumontier\"\n          }\n      ],\n      \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"IOS press\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.iospress.nl\"\n          }\n      },\n      \"datePublished\": {\n          \"@type\": \"Date\",\n          \"@value\": \"2019-12-10\"\n      },\n      \"sameAs\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://doi.org/10.3233/FAIA190307\"\n      }\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\n\n// import iconImage from '../assets/icon.png';\n\nimport { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        A wizard to generate Schema.org metadata for datasets in RDF JSON-LD format.\n      </Typography>\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/fair-metadata-wizard/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/fair-metadata-wizard/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport { Text, View, Platform } from \"react-native\";\nimport { Router, Route, Link } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport './App.css';\nimport NavBar from \"./src/NavBar\";\nimport Footer from \"./src/Footer\";\nimport JsonldWizard from \"./src/JsonldWizard\";\nimport About from \"./src/About\";\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    primary: { light: '#63a4ff', main: blue[700], dark: '#004ba0' },\n    secondary: { light: '#4caf50', main: '#087f23', dark: '#00600f' },\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/fair-metadata-wizard/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        {/* <Route exact path=\"/\" component={ProjectsDashboard} /> */}\n        <Route exact path=\"/\" component={JsonldWizard} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/fair-metadata-wizard/expo-service-worker.js', { scope: '/fair-metadata-wizard/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}